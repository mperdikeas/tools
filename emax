#!/usr/bin/env bash
ME=`basename $0`
WHERE_I_LIVE=${BASH_SOURCE[0]/%${ME}/.}
COUNTF=${WHERE_I_LIVE}/.emax/count

if [ -f ${COUNTF} ];
then
    COUNT=$(<${COUNTF})
else
    touch -a ${COUNTF}
    echo "0" > ${COUNTF}
    COUNT=0
fi

servers=($(find ~/.emacs.d/server -type f -exec basename {} \;))
s=-1
NEWSERVER="newserver"
selectedServer=""
NUM_SERVERS=${#servers[@]}
echo "# of servers is: ${NUM_SERVERS}"



function spawnNewEmacsDaemon {
    printf "Enter name for new emacs daemon:"
    read newServerName
    emacs --daemon="$newServerName"
    emacsclient -f "$newServerName" -t "$@"
}


if [[ $NUM_SERVERS -eq 0 ]] ; then
    spawnNewEmacsDaemon $@
    else
        while ! [[ $s -ge 0 && $s -le $NUM_SERVERS ]]
        do
            echo "Choose server to connect to:"
                if [[ $COUNT -eq 0 ]];
                then            
                    echo "0 - new server (*)"
                else
                    echo "0 - new server"
                fi
            i=0
            for server in "${servers[@]}"
            do
                :
                i=$((i+1))
                if [[ $i -eq $COUNT ]];
                then
                   echo "$i - $server (*)"
                else
                    echo "$i - $server"
                fi
            done
            read -n 1 -s s
            re='^[0-9]+$'
            if ! [[ $s =~ $re ]] ; then
                if [[ $s -eq "" ]]; then
                    s=$COUNT
                else
                    s=-1            
                fi
            fi
            if [[ $s -eq 0 ]] ; then
                selectedServer=$NEWSERVER
            else
                echo "$s" > ${COUNTF}
                selectedServer=${servers[$((s-1))]}
            fi
        done
        #printf "\n$s was entered corresponding to $selectedServer\n"

        if [ ${selectedServer} = ${NEWSERVER} ] ; then
            spawnNewEmacsDaemon $@
        else
            emacsclient -f "$selectedServer" -t "$@"
        fi

fi

